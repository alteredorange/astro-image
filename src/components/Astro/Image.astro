---
let {src, width, height, rotate} = Astro.props

const acceptHeaders = Astro.request.headers.get('accept');
const w = Astro.request.headers.get('width')
console.log({w})
// console.log("IMAGE headerS!: " , acceptHeaders);

// const avif = acceptHeaders.match(/avif|\*\/\*/) ? "avif" : false;
// const webp = acceptHeaders.includes("webp") || acceptHeaders.includes("*/*");

// const test = "text/html,application/xhtml+xml,application/xml;q=0.9,image/,image/webp,image/apng,;q=0.8,application/signed-exchange;v=b3;q=0.9"
// const form = acceptHeaders.match(/avif|\*\/\*/) ? "avif" : acceptHeaders.match(/webp|\*\/\*/) ? "webp" : "jpg";
// const forma = test.match(/image\/avif|\*\/\*/) ? "avif" : test.match(/webp|\*\/\*/) ? "webp" : "jpg";

//get format in priority of avif, webp, jpg
const format = acceptHeaders == "*/*" ? "avif" : acceptHeaders.includes("image/avif") ? "avif" : acceptHeaders.includes("image/webp") ? "webp" : "jpg";
// const b = test == "*/*" ? "avif" : test.includes("image/avif") ? "avif" : test.includes("image/webp") ? "webp" : "jpg";
// console.log("FFFF", format)


const localImage = src.startsWith('/assets/')

// console.log("SRC here: ", src)

const newUrl = "/images?src=" + src + "&width=" + width + "&rotate=" + rotate + "&format=" + format;
const blurUrl = "/images?src=" + src + "&width=10" + "&format=" + format+"&blur=true";

// console.log("newURL: ", newUrl)
// console.log("forma: " , forma);
// console.log(avif)

// const format = avif ? "avif" : webp ? "webp" : "jpg";

// console.log(format)
	const finalW = await width ? width + "px" : "" ;
console.log({finalW})
---


<img width={finalW} height={height + "px"} src={newUrl} style={"background-size: cover; background-image:url('"+blurUrl+ "');"}  alt="hi">
 <!-- src={newUrl} -->
<!-- <img src={blurUrl} sizes="50vw" alt=""> -->
